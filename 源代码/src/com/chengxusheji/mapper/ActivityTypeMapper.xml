<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.ActivityTypeMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加活动类型记录 -->
	<insert id="addActivityType" parameterType="activityType">
		insert into t_activityType(typeName) values 
		(#{typeName})
	</insert>

	<!-- 按照查询条件分页查询活动类型记录 -->
	<select id="queryActivityType" resultMap="activityTypeMap" >
		select t_activityType.* from t_activityType ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="activityTypeMap" type="activityType">
        <id property="typeId" column="typeId" />
    </resultMap>

    <!-- 按照查询条件查询所有活动类型记录 -->
	<select id="queryActivityTypeList" resultMap="activityTypeMap" >
		select t_activityType.* from t_activityType ${where}
	</select>

    <!-- 按照查询条件的活动类型记录数 -->
	<select id="queryActivityTypeCount" resultType="int">
		select count(*) from t_activityType ${where}
	</select>

	<!-- 根据主键查询某个活动类型记录 -->
	<select id="getActivityType" parameterType="int" resultMap="activityTypeMap">
		select * from t_activityType where t_activityType.typeId = #{typeId}
	</select>

	<!-- 更新活动类型记录 -->
	<update id="updateActivityType" parameterType="activityType">
		update t_activityType set typeName=#{typeName} where typeId = #{typeId}
	</update>

	<!-- 删除活动类型记录 -->
	<delete id="deleteActivityType" parameterType="int">
		delete from t_activityType where typeId=#{typeId}
	</delete>

</mapper>
